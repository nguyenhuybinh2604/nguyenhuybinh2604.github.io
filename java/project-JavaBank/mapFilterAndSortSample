import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class Main {
    public static void main(String[] args) {
        // Create a Map to store some key-value pairs
        Map<String, Integer> map = new HashMap<>();
        map.put("John", 30);
        map.put("Jane", 25);
        map.put("Bob", 40);
        map.put("Alice", 35);
        
        // Filter the Map to include only values greater than 30
        Map<String, Integer> filteredMap = map.entrySet().stream()
                .filter(entry -> entry.getValue() > 30)
                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));
        System.out.println("Filtered Map: " + filteredMap);
        
        // Sort the Map by value in ascending order
        Map<String, Integer> sortedMap = map.entrySet().stream()
                .sorted(Map.Entry.comparingByValue())
                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (a, b) -> a, LinkedHashMap::new));
        System.out.println("Sorted Map: " + sortedMap);
    }
}


import java.util.*;

public class MapSortByObjectProperty {
    public static void main(String[] args) {
        Map<String, Object> map = new HashMap<>();
        map.put("obj1", new MyObject("John", 25));
        map.put("obj2", new MyObject("Alice", 30));
        map.put("obj3", new MyObject("Bob", 20));
        
        List<Map.Entry<String, Object>> list = new ArrayList<>(map.entrySet());
        
        // Sort the list by the object's "name" property
        Collections.sort(list, new Comparator<Map.Entry<String, Object>>() {
            @Override
            public int compare(Map.Entry<String, Object> o1, Map.Entry<String, Object> o2) {
                String name1 = ((MyObject) o1.getValue()).getName();
                String name2 = ((MyObject) o2.getValue()).getName();
                return name1.compareTo(name2);
            }
        });
        
        // Print the sorted map
        for (Map.Entry<String, Object> entry : list) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }
}

class MyObject {
    private String name;
    private int age;
    
    public MyObject(String name, int age) {
        this.name = name;
        this.age = age;
    }
    
    public String getName() {
        return name;
    }
    
    public int getAge() {
        return age;
    }
    
    @Override
    public String toString() {
        return name + " (" + age + ")";
    }
}